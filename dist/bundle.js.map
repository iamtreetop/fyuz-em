{"version":3,"sources":["webpack:///./src/index.js"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,oBAAoB;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,oBAAoB;AACrD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,QAAQ;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,CAAC","file":"./bundle.js","sourcesContent":["// // const Game = require(\"./game\")\n// const Background = require(\"./background\");\n// const GamePiece = require(\"./pieces\")\n// // import Background from \"./background\";\n// const Player = require(\"./player\")\n// import Player from './player';\n\ndocument.addEventListener(\"DOMContentLoaded\", () =>{\n    const canvas = document.querySelector('canvas')\n    const ctx = canvas.getContext('2d');\n    // const backgroundEl = document.getElementById(\"background\");\n    // const ctxBg = backgroundEl.getContext(\"2d\");\n    // const background = new Background();\n    // Background();\n    // GamePiece();\n    // ctx.rect(0, 0, backgroundEl.width, backgroundEl.height);\n    // const grd = ctx.createLinearGradient(0, 0, backgroundEl.width, backgroundEl.height);\n\n    class Player{\n        constructor(x, y , radius, color){\n            this.x = x\n            this.y = y\n            this.radius = radius\n            this.color = color\n        }\n\n        draw(){\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n            ctx.fillStyle = this.color\n            ctx.fill();\n        }\n\n        update() {\n            this.draw()\n        }\n    }\n\n    class Projectile {\n        constructor(x, y, radius, color, velocity) {\n            this.x = x\n            this.y = y\n            this.radius = radius\n            this.color = color\n            this.velocity = velocity\n        }\n\n        draw(){\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n            ctx.fillStyle = this.color\n            ctx.fill();\n        }\n\n        update(){\n            this.draw()\n            this.x = this.x + this.velocity.x\n            this.y = this.y + this.velocity.y\n        }\n    }\n\n    const x = canvas.width / 2\n    const y = canvas.height / 2\n    const projColor = `hsl(${Math.random() * 360}, 50%, 50%)`\n    const playerColor = projColor;\n    const player = new Player(x, y, 20, playerColor);\n    const projectiles = []\n\n    function distance(x1, y1, x2, y2) {\n        let xDist = x2 - x1;\n        let yDist = y2 - y1;\n        return Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\n    }\n\n    let circle1;\n    let circle2;\n    function init(){\n        circle1 = new Player(300, 250, 130, 'transparent');\n        // circle2 = new Player(10, 10, 20, 'red')\n    }\n\n    let projectile;\n    let animationId;\n    function animate(){ \n        animationId = requestAnimationFrame(animate);\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n            \n        circle1.update();\n        // circle2.x = mouse.x;\n        // circle2.y = mouse.y;\n        // circle2.update();\n        ctx.rect(0, 0, canvas.width, canvas.height);\n        const grd = ctx.createLinearGradient(0, 0, canvas.width, canvas.height);\n        grd.addColorStop(0, '#8ED6FF');\n        grd.addColorStop(1, '#004CB3');\n        ctx.fillStyle = grd;\n        ctx.fill();\n\n        ctx.beginPath();\n        ctx.arc(canvas.width / 2, canvas.height / 2, 175, 0, Math.PI * 2, false);\n        ctx.strokeStyle = \"lightgrey\"\n        ctx.stroke(); \n            \n        player.draw();\n        projectiles.forEach(projectile => {\n        projectile.draw();\n        projectile.update();\n            \n            if (distance(circle1.x, circle1.y, projectile.x, projectile.y) > circle1.radius + projectile.radius) {\n                // make circle stop, not disappear\n                // projectile.x = x;\n                // projectile.y = y;\n                projectile.velocity = {\n                    x: 0,\n                    y: 0\n                };\n                // circle1.color = 'lightgrey';\n    \n            } else {\n                circle1.color = 'transparent';\n            }\n\n        })\n        // projectile.update();\n        console.log(distance(circle1.x, circle1.y, player.x, player.y));\n        // console.log('animate');\n    }\n\n    const mouse = {\n        x: 10,\n        y: 10\n    }\n\n    addEventListener('mousemove', (event) => {\n        mouse.x = event.offsetX\n        mouse.y = event.offsetY\n    })\n\n    addEventListener('click', (event) => {\n        const angle = Math.atan2(event.offsetY - canvas.height / 2, event.offsetX- canvas.width / 2)\n        const velocity = {\n            x: Math.cos(angle) * 8,\n            y: Math.sin(angle) * 8\n        }\n\n        const projColor = `hsl(${Math.random() * 360}, 50%, 50%)`\n        projectiles.push(\n            new Projectile(canvas.width / 2, canvas.height / 2, 20, projColor, velocity)\n        )\n        console.log(event)\n    })\n    init();\n    animate();\n\n    // ctx.rect(0, 0, canvas.width, canvas.height);\n    // const grd = ctx.createLinearGradient(0, 0, canvas.width, canvas.height);\n    // grd.addColorStop(0, '#8ED6FF');\n    // grd.addColorStop(1, '#004CB3');\n    // ctx.fillStyle = grd;\n    // ctx.fill();\n\n    // ctx.beginPath();\n    // ctx.arc(300, 250, 150, 0, Math.PI * 2, false);\n    // ctx.strokeStyle = \"lightgrey\"\n    // ctx.stroke();\n\n    // for(let i = 0; i < 20; i++) {\n    //     let x = Math.random() * 250;\n    //     let y = Math.random() * 250;\n\n    //     ctx.beginPath();\n    //     ctx.arc(x, y, 20, 0, Math.PI * 2, false);\n    //     ctx.strokeStyle = \"blue\"\n    //     ctx.stroke();\n    // }\n\n    // $('.start-button').click(() => {\n    //     const game = new Game(bee, net, honey, canvasEl);\n    //     const gameView = new GameView(game, ctx, background, canvasEl);\n    //     background.startBg(backgroundEl, ctxBg);\n    //     gameView.gameMenu();\n    // });\n\n    // $('.restart-button').click(() => {\n    //     ctx.clearRect(0,0, 700, 390);\n    //     ctxBg.clearRect(0,0, 700, 390);\n    //     GameView.gameOver = false;\n    //     const game = new Game(bee, net, honey, canvasEl);\n    //     const gameView = new GameView(game, ctx, background, canvasEl);\n    //     gameView.gameMenu();\n    // });\n})\n\n"],"sourceRoot":""}