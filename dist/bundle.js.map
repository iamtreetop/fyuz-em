{"version":3,"sources":["webpack:///./src/index.js"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,uB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yB;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,QAAQ;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,CAAC","file":"./bundle.js","sourcesContent":["// // const Game = require(\"./game\")\n// const Background = require(\"./background\");\n// const GamePiece = require(\"./pieces\")\n// // import Background from \"./background\";\n// const Player = require(\"./player\")\n// import Player from './player';\n\ndocument.addEventListener(\"DOMContentLoaded\", () =>{\n    const canvas = document.querySelector('canvas')\n    const ctx = canvas.getContext('2d');\n    // const backgroundEl = document.getElementById(\"background\");\n    // const ctxBg = backgroundEl.getContext(\"2d\");\n    // const background = new Background();\n    // Background();\n    // GamePiece();\n    // ctx.rect(0, 0, backgroundEl.width, backgroundEl.height);\n    // const grd = ctx.createLinearGradient(0, 0, backgroundEl.width, backgroundEl.height);\n\n    ctx.beginPath();\n    ctx.arc(canvas.width / 2, canvas.height / 2, 150, 0, Math.PI * 2, false);\n    ctx.strokeStyle = \"lightgrey\"\n    ctx.stroke();   \n\n    class Player{\n        constructor(x, y , radius, color){\n            this.x = x\n            this.y = y\n            this.radius = radius\n            this.color = color\n        }\n\n        draw(){\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n            ctx.fillStyle = this.color\n            ctx.fill();\n        }\n    }\n\n    class Projectile {\n        constructor(x, y, radius, color, velocity) {\n            this.x = x\n            this.y = y\n            this.radius = radius\n            this.color = color\n            this.velocity = velocity\n        }\n\n        draw(){\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n            ctx.fillStyle = this.color\n            ctx.fill();\n        }\n\n        update(){\n            this.draw()\n            this.x = this.x + this.velocity.x\n            this.y = this.y + this.velocity.y\n        }\n    }\n\n    const x = canvas.width / 2\n    const y = canvas.height / 2\n\n    const player = new Player(x, y, 20, \"green\");\n    \n    \n    // const projectile = new Projectile(\n    //     canvas.width / 2, \n    //     canvas.height / 2, \n    //     10, \n    //     \"red\",\n    //     {\n    //         x: 1,\n    //         y: 1\n    //     }\n    // )\n\n    const projectiles = []\n\n    function animate(){ \n            requestAnimationFrame(animate);\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            \n            ctx.rect(0, 0, canvas.width, canvas.height);\n            const grd = ctx.createLinearGradient(0, 0, canvas.width, canvas.height);\n            grd.addColorStop(0, '#8ED6FF');\n            grd.addColorStop(1, '#004CB3');\n            ctx.fillStyle = grd;\n            ctx.fill();\n\n            ctx.beginPath();\n            ctx.arc(canvas.width / 2, canvas.height / 2, 150, 0, Math.PI * 2, false);\n            ctx.strokeStyle = \"lightgrey\"\n            ctx.stroke(); \n            \n            player.draw();\n            projectiles.forEach(projectile => {\n            projectile.update();\n        })\n        // projectile.draw();\n        // projectile.update();\n        // console.log('animate');\n    }\n\n    addEventListener('click', (event) => {\n        const angle = Math.atan2(event.offsetY - canvas.height / 2, event.offsetX- canvas.width / 2)\n        const velocity = {\n            x: Math.cos(angle),\n            y: Math.sin(angle)\n        }\n        \n        projectiles.push(\n            new Projectile(canvas.width / 2, canvas.height / 2, 20, 'blue', velocity)\n        )\n        console.log(event)\n    })\n    animate();\n\n    // ctx.rect(0, 0, canvas.width, canvas.height);\n    // const grd = ctx.createLinearGradient(0, 0, canvas.width, canvas.height);\n    // grd.addColorStop(0, '#8ED6FF');\n    // grd.addColorStop(1, '#004CB3');\n    // ctx.fillStyle = grd;\n    // ctx.fill();\n\n    // ctx.beginPath();\n    // ctx.arc(300, 250, 150, 0, Math.PI * 2, false);\n    // ctx.strokeStyle = \"lightgrey\"\n    // ctx.stroke();\n\n    // for(let i = 0; i < 20; i++) {\n    //     let x = Math.random() * 250;\n    //     let y = Math.random() * 250;\n\n    //     ctx.beginPath();\n    //     ctx.arc(x, y, 20, 0, Math.PI * 2, false);\n    //     ctx.strokeStyle = \"blue\"\n    //     ctx.stroke();\n    // }\n\n    // $('.start-button').click(() => {\n    //     const game = new Game(bee, net, honey, canvasEl);\n    //     const gameView = new GameView(game, ctx, background, canvasEl);\n    //     background.startBg(backgroundEl, ctxBg);\n    //     gameView.gameMenu();\n    // });\n\n    // $('.restart-button').click(() => {\n    //     ctx.clearRect(0,0, 700, 390);\n    //     ctxBg.clearRect(0,0, 700, 390);\n    //     GameView.gameOver = false;\n    //     const game = new Game(bee, net, honey, canvasEl);\n    //     const gameView = new GameView(game, ctx, background, canvasEl);\n    //     gameView.gameMenu();\n    // });\n})\n\n"],"sourceRoot":""}